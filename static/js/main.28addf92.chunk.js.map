{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/Layout/MainHeader.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Shop/Products.module.css","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js"],"names":["module","exports","uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","uiActions","actions","CartButton","toggleCartHandler","bind","this","props","uiDispatch","className","classes","button","onClick","badge","cartQuantity","React","Component","connect","cart","totalQuantity","dispatch","MainHeader","header","Layout","children","Card","card","cartSlice","items","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","CartItem","removeItemHandler","addItemHandler","total","addItem","removeItem","toFixed","itemprice","details","Cart","cartItems","map","cartItem","ProductItem","description","useDispatch","useSelector","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","App","fetchCart","prevProps","prevState","sendCart","Fragment","showCart","ui","a","fetchData","fetch","res","ok","Error","json","data","result","console","log","sendRequest","method","headers","body","JSON","stringify","sendCartData","pending","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28addf92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1xX1B\",\"details\":\"CartItem_details__NBE3C\",\"quantity\":\"CartItem_quantity__m1aBf\",\"price\":\"CartItem_price__2CGqN\",\"itemprice\":\"CartItem_itemprice__E7lHU\",\"actions\":\"CartItem_actions__lK81A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__317s2\",\"price\":\"ProductItem_price__2wKoZ\",\"actions\":\"ProductItem_actions__2LNUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2Zcz3\",\"error\":\"Notification_error__1iM7W\",\"success\":\"Notification_success__2AWNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3BR8b\",\"badge\":\"CartButton_badge__y_YzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1paQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3Se7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__Mu2w2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__14bb9\"};","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst uiSlice = createSlice({\r\n\tname: 'ui',\r\n\tinitialState: { cartIsVisible: false, notification: null },\r\n\treducers: {\r\n\t\ttoggle(state){\r\n\t\t\tstate.cartIsVisible = !state.cartIsVisible;\r\n\t\t},\r\n\t\tshowNotification(state, action){\r\n\t\t\tstate.notification = {\r\n\t\t\t\tstatus: action.payload.status,\r\n\t\t\t\ttitle: action.payload.title,\r\n\t\t\t\tmessage: action.payload.message,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import React from 'react';\nimport classes from './CartButton.module.css';\nimport {uiActions} from '../../store/ui-slice.js';\nimport {useDispatch, useSelector, connect} from 'react-redux';\n/*\nconst CartButton = props => {\n\tconst dispatch = useDispatch();\n\tconst cartQuantity = useSelector(state => state.cart.totalQuantity);\n\n\tconst toggleCartHandler = () => dispatch(uiActions.toggle());\n\n\treturn <button className={classes.button} onClick={toggleCartHandler} >\n\t\t<span>My Cart</span>\n\t\t<span className={classes.badge}>{cartQuantity}</span>\n\t</button>\n};\n\nexport default CartButton;\n*/\n\nclass CartButton extends React.Component{\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.toggleCartHandler = this.toggleCartHandler.bind(this);\n\t}\n\n\ttoggleCartHandler(){\n\t\tthis.props.uiDispatch();\n\t}\n\n\trender(){\n\t\treturn <button className={classes.button} onClick={this.toggleCartHandler} >\n\t\t\t<span>My Cart</span>\n\t\t\t<span className={classes.badge}>{this.props.cartQuantity}</span>\n\t\t</button>\n\t}\n}\n\nconst mapStateToProps = state => ({cartQuantity: state.cart.totalQuantity});\n\nconst mapDispatchToProps = dispatch => ({\n\tuiDispatch: () => dispatch(uiActions.toggle())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartButton);\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import {createSlice} from '@reduxjs/toolkit';\r\nimport {uiActions} from './ui-slice.js';\r\n\r\nconst cartSlice = createSlice({\r\n\tname: 'cart',\r\n\tinitialState: { items: [], totalQuantity: 0, changed: false, /*totalAmount: 0,*/ },\r\n\treducers: {\r\n\t\treplaceCart(state, action){\r\n\t\t\tstate.totalQuantity = action.payload.totalQuantity;\r\n\t\t\tstate.items = action.payload.items;\r\n\t\t},\r\n\t\taddItemToCart(state, action){\r\n\t\t\tconst newItem = action.payload;\r\n\t\t\tconst existingItem = state.items.find(item => item.id === newItem.id)\r\n\t\t\tstate.totalQuantity++;\r\n\t\t\tstate.changed = true;\r\n\t\t\tif(!existingItem){\r\n\t\t\t\tstate.items.push({\r\n\t\t\t\t\tid: newItem.id,\r\n\t\t\t\t\tprice: newItem.price,\r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t\ttotalPrice: newItem.price,\r\n\t\t\t\t\tname: newItem.title,\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\texistingItem.quantity++;\r\n\t\t\t\texistingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveItemFromCart(state, action){\r\n\t\t\tconst id = action.payload;\r\n\t\t\tconst existingItem = state.items.find(item => item.id === id);\r\n\t\t\tstate.totalQuantity--;\r\n\t\t\tstate.changed = true;\r\n\t\t\tif(existingItem.quantity === 1){\r\n\t\t\t\tstate.items = state.items.filter(item => item.id !== id);\r\n\t\t\t}else{\r\n\t\t\t\texistingItem.quantity--;\r\n\t\t\t\texistingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import React from 'react';\nimport classes from './CartItem.module.css';\nimport {useDispatch, connect} from 'react-redux';\nimport {cartActions} from '../../store/cart-slice.js';\n/*\nconst CartItem = props => {\n    const dispatch = useDispatch();\n    const { id, title, quantity, total, price } = props.item;\n\n    const addItemHandler = () => dispatch(cartActions.addItemToCart({id, title, price}));\n    const removeItemHandler = () => dispatch(cartActions.removeItemFromCart(id));\n\n    return <li className={classes.item}>\n        <header>\n            <h3>{title}</h3>\n            <div className={classes.price}>\n                ${total.toFixed(2)}{' '}\n                <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n            </div>\n        </header>\n        <div className={classes.details}>\n            <div className={classes.quantity}>\n                x <span>{quantity}</span>\n            </div>\n            <div className={classes.actions}>\n                <button onClick={removeItemHandler} >-</button>\n                <button onClick={addItemHandler} >+</button>\n            </div>\n        </div>\n    </li>\n};\n\nexport default CartItem;\n*/\n\nclass CartItem extends React.Component{\n    constructor(){\n        super();\n\n        this.removeItemHandler = this.removeItemHandler.bind(this);\n        this.addItemHandler = this.addItemHandler.bind(this);\n    }\n\n    addItemHandler(){\n        const { id, title, quantity, total, price } = this.props.item;\n        this.props.addItem(id, title, price);\n    }\n\n    removeItemHandler(){\n        this.props.removeItem(this.props.item.id);\n    }\n\n    render(){\n        const { id, title, quantity, total, price } = this.props.item;\n        return <li className={classes.item}>\n            <header>\n                <h3>{title}</h3>\n                <div className={classes.price}>\n                    ${total.toFixed(2)}{' '}\n                    <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n                </div>\n            </header>\n            <div className={classes.details}>\n                <div className={classes.quantity}>\n                    x <span>{quantity}</span>\n                </div>\n                <div className={classes.actions}>\n                    <button onClick={this.removeItemHandler} >-</button>\n                    <button onClick={this.addItemHandler} >+</button>\n                </div>\n            </div>\n        </li>\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: (id, title, price) => dispatch(cartActions.addItemToCart({id, title, price})),\n    removeItem: id => dispatch(cartActions.removeItemFromCart(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n","import React from 'react';\nimport {useSelector, connect} from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n/*\nconst Cart = (props) => {\n    const cartItems = useSelector(state => state.cart.items);\n\n    return <Card className={classes.cart}>\n        <h2>Your Shopping Cart</h2>\n        <ul>\n            {\n                cartItems.map(cartItem =>\n                    <CartItem key={cartItem.id} id={cartItem.id} item={{id: cartItem.id, title: cartItem.name, quantity: cartItem.quantity, total: cartItem.totalPrice, price: cartItem.price }} />\n                )\n            }\n        </ul>\n    </Card>\n};\n\nexport default Cart;\n*/\n\nclass Cart extends React.Component{\n    render(){\n        return <Card className={classes.cart}>\n            <h2>Your Shopping Cart</h2>\n            <ul>\n                {\n                    this.props.cartItems.map(cartItem =>\n                        <CartItem key={cartItem.id} id={cartItem.id} item={{id: cartItem.id, title: cartItem.name, quantity: cartItem.quantity, total: cartItem.totalPrice, price: cartItem.price }} />\n                    )\n                }\n            </ul>\n        </Card>\n    }\n}\n\nconst mapDispatchToProps = state => ({cartItems: state.cart.items});\n\nexport default connect(mapDispatchToProps, null)(Cart);","import React from 'react';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport {useDispatch, useSelector, connect} from 'react-redux';\nimport {cartActions} from '../../store/cart-slice.js';\n\nconst ProductItem = props => {\n    const { id, title, price, description } = props;\n    const dispatch = useDispatch();\n    const cart = useSelector(state => state.cart);\n\n    const addToCartHandler = () => dispatch(cartActions.addItemToCart({id, title, price, description}));\n\n    return <li className={classes.item}>\n        <Card>\n            <header>\n                <h3>{title}</h3>\n                <div className={classes.price}>${price.toFixed(2)}</div>\n            </header>\n            <p>{description}</p>\n            <div className={classes.actions}>\n                <button onClick={addToCartHandler} >Add to Cart</button>\n            </div>\n        </Card>\n    </li>\n};\n\nexport default ProductItem;\n\n/*\nclass ProductItem extends React.Component{\n    constructor(){\n        super()\n        this.addToCartHandler = this.addToCartHandler.bind(this);\n    }\n\n    addToCartHandler(){\n        this.props.addCart();\n    }\n\n    render(){\n        const {title, price, description} = this.props;\n\n        return <li className={classes.item}>\n            <Card>\n                <header>\n                    <h3>{title}</h3>\n                    <div className={classes.price}>${price.toFixed(2)}</div>\n                </header>\n                <p>{description}</p>\n                <div className={classes.actions}>\n                    <button onClick={this.addToCartHandler} >Add to Cart</button>\n                </div>\n            </Card>\n        </li>\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addCart: () => dispatch(cartActions.addItemToCart()),\n});\n\nexport default connect(null, mapDispatchToProps)(ProductItem);\n*/","import React from 'react';\nimport ProductItem from './ProductItem';\nimport classes from './Products.module.css';\n\nconst DUMMY_PRODUCTS = [\n    { id: 'p1', price: 6, title: 'My First Book', description: 'The first book I ever wrote', },\n    { id: 'p2', price: 5, title: 'My Second Book', description: 'The second book I ever wrote', },\n];\n/*\nconst Products = props => {\n    return <section className={classes.products}>\n        <h2>Buy your favorite products</h2>\n        <ul>\n            {\n                DUMMY_PRODUCTS.map(product => <ProductItem key={product.id} id={product.id} title='Test' price={product.price} description={product.description}\n            />)\n            }\n        </ul>\n    </section>\n};\n\nexport default Products;*/\n\nclass Products extends React.Component{\n    \n    render(){\n        return <section className={classes.products}>\n            <h2>Buy your favorite products</h2>\n            <ul>\n                {\n                    DUMMY_PRODUCTS.map(product => <ProductItem key={product.id} id={product.id} title='Test' price={product.price} description={product.description}\n                />)\n                }\n            </ul>\n        </section>\n    }\n}\n\nexport default Products;","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\nimport Layout from './components/Layout/Layout.js';\nimport Cart from './components/Cart/Cart.js';\nimport Products from './components/Shop/Products.js';\nimport {useSelector, useDispatch, connect} from 'react-redux';\nimport {uiActions} from './store/ui-slice.js';\nimport Notification from './components/UI/Notification.js';\nimport {sendCartData, fetchCartData} from './store/cart-actions.js';\n\n/*let isInitial = true;\nconst App = () => {\n    const cart = useSelector(state => state.cart);\n    const showCart = useSelector(state => state.ui.cartIsVisible);\n    const notification = useSelector(state => state.ui.notification);\n    const dispatch = useDispatch();\n\n    React.useEffect(() => {\n        dispatch(fetchCartData());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if(isInitial){\n            isInitial = false;\n            return;\n        }\n        if(cart.changed) dispatch(sendCartData(cart));\n    }, [cart, dispatch]);\n\n    return <React.Fragment>\n        {notification && <Notification status={notification.status} title={notification.title} message={notification.message} />}\n        <Layout>\n            {showCart && <Cart />}\n            <Products />\n        </Layout>\n    </React.Fragment>\n};\n\nexport default App;\n*/\n\nclass App extends React.Component{\n\n    /*async sendCartData(){\n        this.props.pending();\n        const res = await fetch(`https://redux-async-practice-default-rtdb.firebaseio.com/cart.json`, {\n            method: 'PUT',\n            body: JSON.stringify(this.props.cart),\n        });\n        if(!res.ok) throw new Error(`sending cart data failed!`);\n        this.props.success();\n    }*/\n    \n    componentDidMount(){\n        this.props.fetchCart();\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.cart !== this.props.cart){\n            if(this.props.cart.changed) this.props.sendCart(this.props.cart);\n        }\n    }\n\n    render(){\n        return <React.Fragment>\n            {this.props.notification && <Notification status={this.props.notification.status} title={this.props.notification.title} message={this.props.notification.message} />}\n            <Layout>\n                {this.props.showCart && <Cart />}\n                <Products />\n            </Layout>\n        </React.Fragment>\n    }\n}\n\nconst mapStateToProps = state => ({\n    showCart: state.ui.cartIsVisible,\n    cart: state.cart,\n    notification: state.ui.notification,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCart: () => dispatch(fetchCartData()),\n    sendCart: cart => dispatch(sendCartData(cart)),\n    pending: () => dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'sending...',\n        message: 'send cart data'\n    })),\n    error: () => dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'send cart data failed',\n    })),\n    success: () => dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success!',\n        message: 'data send successfully'\n    })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n/*\nReact.useEffect(() => {\n        const sendCartData = async () => {\n            dispatch(uiActions.showNotification({\n                status: 'pending',\n                title: 'Sending...',\n                message: 'sending cart data.',\n            }));\n            const res = await fetch(`https://redux-async-practice-default-rtdb.firebaseio.com/cart.json`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(cart),\n            });\n            if(!res.ok) throw new Error('sending failed.....!');\n            dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success',\n                message: 'send data successfully.',\n            }));\n        };\n        sendCartData().catch(err => {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error',\n                message: 'An Error occurred!',\n            }));\n            console.error(err.message);\n        })\n    }, [cart, dispatch]);\n*/\n","import{uiActions} from './ui-slice.js';\r\nimport{cartActions} from './cart-slice.js';\r\n\r\nexport const fetchCartData = () => {\r\n\treturn async dispatch => {\r\n\t\tconst fetchData = async () => {\r\n\t\t\tconst res = await fetch(`https://redux-async-practice-default-rtdb.firebaseio.com/cart.json`);\r\n\t\t\tif(!res.ok) throw new Error('could not fetch cart data!');\r\n\t\t\tconst data = await res.json();\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\ttry{\r\n\t\t\tconst result = await fetchData();\r\n\t\t\tconsole.log(result)\r\n\t\t\tdispatch(cartActions.replaceCart({\r\n\t\t\t\titems: result.items || [],\r\n\t\t\t\ttotalQuantity: result.totalQuantity,\r\n\t\t\t}));\r\n\t\t}catch(err){\r\n\t\t\tdispatch(uiActions.showNotification({\r\n\t\t\t\tstatus: 'error',\r\n\t\t\t\ttitle: 'error',\r\n\t\t\t\tmessage: 'fetching cart data failed',\r\n\t\t\t}));\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const sendCartData = cart => {\r\n\treturn async dispatch => {\r\n\t\tdispatch(uiActions.showNotification({\r\n\t\t\tstatus: 'pending',\r\n\t\t\ttitle: 'Sending...',\r\n\t\t\tmessage: 'sending cart data.',\r\n\t\t}));\r\n\t\tconst sendRequest = async () => {\r\n\t\t\tconst res = await fetch(`https://redux-async-practice-default-rtdb.firebaseio.com/cart.json`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({items: cart.items, totalQuantity: cart.totalQuantity}),\r\n            });\r\n            if(!res.ok) throw new Error('sending failed.....!');\r\n\t\t};\r\n\t\t\r\n\t\ttry{\r\n\t\t\tawait sendRequest();\r\n\t\t\tdispatch(uiActions.showNotification({\r\n\t\t\t\tstatus: 'success',\r\n\t\t\t\ttitle: 'Success',\r\n\t\t\t\tmessage: 'send data successfully.',\r\n\t\t\t}));\r\n\t\t}catch(err){\r\n\t\t\tdispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error',\r\n                message: 'An Error occurred!',\r\n            }));\r\n\t\t\tconsole.error(err.message);\r\n\t\t}\r\n\t};\r\n};\r\n","import {configureStore, createStore} from '@reduxjs/toolkit';\r\nimport uiSlice from './ui-slice.js';\r\nimport cartSlice from './cart-slice.js';\r\n\r\nconst store = configureStore({\r\n\treducer: { ui: uiSlice.reducer, cart: cartSlice.reducer }\r\n});\r\n\r\nexport default store;\r\n\r\n/* ================= */\r\n/* FOR SINGLE SLICE  */\r\n/* ================= */\r\n/*\r\nconst store = createStore(uiSlice.reducer);\r\n*/\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport store from './store/index.js';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}